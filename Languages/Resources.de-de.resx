<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="WelcomeSimple" xml:space="preserve">
    <value>Willkommen</value>
  </data>
  <data name="IngredientsSimple" xml:space="preserve">
    <value>Zutaten</value>
  </data>
  <data name="RecipesSimple" xml:space="preserve">
    <value>Rezepte</value>
  </data>
  <data name="OptionsSimple" xml:space="preserve">
    <value>Optionen</value>
  </data>
  <data name="WelcomeText1" xml:space="preserve">
    <value>Willkommen zu deinem ganz persönlichen Essensplaner! Hier kannst du all deine wertvollen Rezepte speichern, einen Wochenplan erstellen um stets zu wissen was es zum Abendessen gibt und dir für den Wochenplan eine Einkaufsliste generieren lassen damit du weißt welche Zutaten du für die kommende Woche kaufen musst.</value>
    <comment>Welcome to your personal food planner! Here, you can store all your precious recipes, create a week plan to know what's for dinner and generate a shopping list to know what to buy for the week.</comment>
  </data>
  <data name="WelcomeText2Pre" xml:space="preserve">
    <value>Möchtest du direkt loslegen? Warum fängst du nicht damit an </value>
  </data>
  <data name="WelcomeText2Btn" xml:space="preserve">
    <value>ein Rezept zu erstellen</value>
  </data>
  <data name="ChangeLangSimple" xml:space="preserve">
    <value>Sprache ändern</value>
  </data>
  <data name="MsgChangedLang" xml:space="preserve">
    <value>Sprache geändert. Bitte starte diese Applikation neu damit die Änderungen wirksam werden.</value>
  </data>
  <data name="SuccessSimple" xml:space="preserve">
    <value>Erfolg</value>
  </data>
  <data name="ErrorSimple" xml:space="preserve">
    <value>Fehler</value>
  </data>
  <data name="MsgDBNotFound" xml:space="preserve">
    <value>Die verbundene Datenbank konnte nicht gefunden werden! Manche Funktionen könnten nicht funktionieren oder sogar zum Programmabsturz führen.</value>
  </data>
  <data name="RecipeList" xml:space="preserve">
    <value>Rezepte</value>
  </data>
  <data name="RecipeName" xml:space="preserve">
    <value>Rezeptname</value>
  </data>
  <data name="RecipePrep" xml:space="preserve">
    <value>Rezeptzubereitung</value>
  </data>
  <data name="RecipeCreate" xml:space="preserve">
    <value>Rezept erstellen</value>
  </data>
  <data name="RecipeEdit" xml:space="preserve">
    <value>Ausgewähltes Rezept bearbeiten</value>
  </data>
  <data name="NewRecipeSimple" xml:space="preserve">
    <value>Neues Rezept</value>
  </data>
  <data name="NameSimple" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="AmountSimple" xml:space="preserve">
    <value>Menge</value>
  </data>
  <data name="NoteSimple" xml:space="preserve">
    <value>Notiz</value>
  </data>
  <data name="LinkedIngreds" xml:space="preserve">
    <value>Verknüpfte Zutaten:</value>
  </data>
  <data name="AddIngredSimple" xml:space="preserve">
    <value>Zutat hinzufügen</value>
  </data>
  <data name="SaveRecipeSimple" xml:space="preserve">
    <value>Rezept speichern</value>
  </data>
  <data name="RecipeDelete" xml:space="preserve">
    <value>Ausgewähltes Rezept löschen</value>
  </data>
  <data name="ConfirmSimple" xml:space="preserve">
    <value>Bestätigen</value>
  </data>
  <data name="DelRecipeConfirm" xml:space="preserve">
    <value>Bist du dir sicher, dass du das Rezept "$1" löschen willst? Diese Operation kann nicht rückgängig gemacht werden!</value>
  </data>
  <data name="MsgInvalidRecipeContent" xml:space="preserve">
    <value>Dieses Rezept kann nicht gespeichert werden da dessen Inhalt nicht erlaubte Zeichen enthält!

Nicht erlaubte Zeichen:
Einfache Anführungszeichen
Doppelte Anführungszeichen</value>
  </data>
  <data name="MsgRecipeCreatedWithErrors" xml:space="preserve">
    <value>Das Rezept konnte nicht vollständig erstellt werden! Bitte editiere die Datenbank manuell und füge die verbleibenden Datensätze hinzu ($1 Anfragen fehlgeschlagen).</value>
  </data>
  <data name="MsgRecipeCreated" xml:space="preserve">
    <value>Rezept erfolgreich gespeichert!</value>
  </data>
  <data name="InfoSimple" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="DelQueriesInfo" xml:space="preserve">
    <value>Es wurden $1 Lösch-Anfragen ausgeführt.
Erfolg: $2
Betroffene Zeilen: $3</value>
  </data>
  <data name="MsgRecipeUpdatedWithErrors" xml:space="preserve">
    <value>Das Rezept konnte nicht vollständig bearbeitet werden! Bitte editiere die Datenbank manuell und update die verbleibenden Datensätze ($1 Anfragen fehlgeschlagen).</value>
  </data>
  <data name="NotesSimple" xml:space="preserve">
    <value>Notizen</value>
  </data>
</root>